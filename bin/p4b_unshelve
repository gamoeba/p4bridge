#!/bin/bash
# Check for proper number of command line args.
source p4butils
setdepot

EXPECTED_ARGS=1
E_BADARGS=65

if [ $# -ne $EXPECTED_ARGS ]
then
  echo "Usage: `basename $0` {changelist-num}"
  exit $E_BADARGS
fi

CHANGELIST=$1
export CURR_BRANCH=`git rev-parse --abbrev-ref HEAD`

#remove any previous branch
git branch -D shelved/$CHANGELIST 2>/dev/null
#create a new orphaned branch
git checkout --orphan shelved/$CHANGELIST 
#we don't want any content initially
git reset --hard

CHANGES=`p4 describe -s -S $CHANGELIST | sed -e '1,/^Shelved files.*/d' | awk '/^\s*$/{next;}{print $2}' `
echo "$CHANGES" |
while read CHG
do 
    if [[ ! "$CHG" =~ "#none" ]]
    then
        BASECL=`p4 fstat -T headChange $CHG | awk '/^\s*$/{next;}{print $3}'` 
        FILENAME=`echo $CHG | sed -n -e 's|'"$P4DEPOT"'/\(.*\)#.*|\1|p' `
        BASECL=`limitp4change $BASECL`
        TAGNAME="perforce#$BASECL"
        git checkout $TAGNAME $FILENAME
    fi 
done 
git commit -q -m "Base file versions:
$CHANGES"
echo "$CHANGES" |
while read CHG
do 
    P4FILENAME=`echo $CHG | sed -e 's|#.*||g'`
    MATCHSTR='s|'$P4DEPOT'/\(.*\)#.*|\1|p' 
    FILENAME=`echo $CHG | sed -n -e $MATCHSTR `
    p4 unshelve -f -s $CHANGELIST $P4FILENAME > /dev/null
    git --work-tree $P4BRIDGEROOTDIR add $FILENAME
    # now reset both perforce and git indexes
    p4 revert $P4FILENAME > /dev/null
    git checkout $FILENAME
done

git --work-tree $P4BRIDGEROOTDIR commit -q -m "tmp"
amendChangelistWithCommitInfo $CHANGELIST "Shelved@$1
Previous versions of files:
$CHANGES"

git tag -af "shelved#$CHANGELIST" -m "p4bridge"

git checkout $CURR_BRANCH
